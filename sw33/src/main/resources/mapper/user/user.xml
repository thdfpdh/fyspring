<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Dao: query찾는 분류 기준 
namespace+id -> com.pcwk.ehr.user.doSelectOne
-->  
<mapper namespace="com.pcwk.ehr.user">

   <select id="levelPerMemberCount" parameterType="LevelPerMemberVO" 
           resultType="LevelPerMemberVO">
		SELECT #{year}     as year,
		       t2.det_name as levelName,
		       COUNT(*)    as count
		FROM users t1
		INNER JOIN cmn_code t2
		ON t1.u_level = t2.det_code
		WHERE TO_CHAR(t1.reg_dt,'YYYY') = #{year} 
		GROUP BY t2.det_name   
   </select>

   <select id="idDuplicateCheck" parameterType="UserVO" resultType="int">
         SELECT                   
            COUNT(*) cnt         
         FROM                     
            users                
         WHERE user_id = #{userId}   
   </select>

    <sql id="searchCondition">
	    <where>
	        <choose>
	            <when test="searchDiv !=null and searchDiv == '10'">
	                user_id = #{searchWord}
	            </when>
                <when test="searchDiv !=null and searchDiv == '20'">
                    name LIKE #{searchWord} ||'%'
                </when>
                <when test="searchDiv !=null and searchDiv == '30'">
                    email LIKE #{searchWord} ||'%'
                </when>                  	            
	        </choose>
	           
	    </where>            
    </sql>

    <select id="doRetrieve" parameterType="UserVO" resultType="UserVO">
        
		SELECT A.*,B.*
		FROM(
		    SELECT TT1.rnum AS no,
		           TT1.user_id,
		           TT1.name,
		           TT1.u_level as levelIntValue ,
		           TT1.login,
		           TT1.recommend,
		           TT1.email,
		           DECODE( TO_CHAR(TT1.reg_dt,'YYYY-MM-DD'),TO_CHAR(SYSDATE,'YYYY-MM-DD')
		                   ,TO_CHAR(TT1.reg_dt,'HH24:MI')
		                   ,TO_CHAR(TT1.reg_dt,'YYYY-MM-DD')) AS reg_dt
		    FROM (
		        SELECT ROWNUM AS rnum, T1.*
		        FROM (SELECT *
		              FROM users
		              --WHERE조건 user_id(10),name(20),email(30),
                      <include refid="searchCondition"></include>
		              ORDER BY reg_dt desc
		        )T1      
           
		     <![CDATA[   WHERE ROWNUM <= ( #{pageSize} * (#{pageNo} - 1)+ #{pageSize} ) 
		    )TT1
		    WHERE rnum >= ( #{pageSize} * (#{pageNo} - 1)+ 1 ) ]]>
		)A
		CROSS JOIN
		(
		    SELECT COUNT(*) total_cnt
		    FROM users
		    --WHERE조건
            <include refid="searchCondition"></include>		    
		)B
        
    </select>
    
    
    <resultMap type="UserVO" id="userMap">
        <result column="user_id"     property="userId"/>
        <result column="name"        property="name"/>
        <result column="password"    property="password"/>
        <result column="u_level"     property="levelIntValue"/>
        <result column="login"       property="login"/>
        <result column="recommend"   property="recommend"/>
        <result column="email"       property="email"/>
        <result column="regDt"       property="regDt"/>
    </resultMap>
    
    <select id="getAll" parameterType="UserVO" resultMap="userMap">
		 SELECT  t1.user_id,                                      
		         t1.name,                                         
		         t1.password ,                                     
		         t1.u_level,                                      
		         t1.login,                                        
		         t1.recommend,                                    
		         t1.email,                                        
		         TO_CHAR(t1.reg_dt,'YYYY-MM-DD HH24:MI:SS') reg_dt
		 FROM                                                     
		    users t1                                             
		 WHERE user_id LIKE #{userId}||'%'                                
		 ORDER BY t1.user_id                                      
    </select>

    <select id="getCount" resultType="int" parameterType="UserVO">
	     SELECT                   
	        COUNT(*) cnt         
		 FROM                     
		    users                
		 WHERE user_id LIKE #{userId} ||'%'
    </select>


    <update id="doUpdate" parameterType="UserVO">
	     UPDATE users             
		 SET name       = #{name}       
		     ,password  = #{password}       
		     ,u_level   = #{levelIntValue}       
		     ,login     = #{login}       
		     ,recommend = #{recommend}       
		     ,email     = #{email}       
		     ,reg_dt    = SYSDATE 
		 WHERE                    
		     user_id = #{userId}          
    </update>




    <select id="doSelectOne" parameterType="UserVO" 
    resultType="UserVO">
		SELECT             
		     user_id  AS userId,       
		     name,          
		     password,      
		     u_level  AS levelIntValue,       
		     login,         
		     recommend,     
		     email,         
		     TO_CHAR(reg_dt,'yyyy-mm-dd HH24:MI:SS') AS regDt     
		 FROM               
		     users          
		 WHERE user_id = #{userId}      
    </select>


    <insert id="doSave" parameterType="UserVO">
		INSERT INTO users (  
		    user_id,         
		    name,            
		    password,        
		    u_level,         
		    login,           
		    recommend,       
		    email,           
		    reg_dt           
		) VALUES (           
		    #{userId},               
		    #{name},               
		    #{password},               
		    #{levelIntValue},               
		    #{login},               
		    #{recommend},               
		    #{email},               
		    SYSDATE          
		)                        
    </insert>


    <delete id="doDelete" parameterType="UserVO">
	    DELETE FROM users 
	    WHERE  user_id = #{userId}
    </delete>

</mapper>  